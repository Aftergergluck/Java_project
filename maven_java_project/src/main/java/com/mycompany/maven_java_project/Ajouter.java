/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.maven_java_project;
import javax.swing.*;
import java.awt.*;
import javax.swing.border.Border;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;



/**
 *Ajout d'un composant dans la BDD
 * @author Florian
 */
public class Ajouter extends javax.swing.JFrame {

    /**
     * Creates new form Ajouter
     */
    public Ajouter()  {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelAjouter = new javax.swing.JLabel();
        jComboBoxSelection = new javax.swing.JComboBox();
        jButtonValidSelect = new javax.swing.JButton();
        jLabelSelect = new javax.swing.JLabel();
        jPanelPrincipal = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanelOrdi = new javax.swing.JPanel();
        jLabelAddOrdi = new javax.swing.JLabel();
        jLabelNameOrdi = new javax.swing.JLabel();
        jLabelMacOrdi = new javax.swing.JLabel();
        jLabelEmplacementOrdi = new javax.swing.JLabel();
        jLabelOsOrdi = new javax.swing.JLabel();
        jLabelActiveOrdi = new javax.swing.JLabel();
        jTextFieldNameOrdi = new javax.swing.JTextField();
        jTextFieldMacOrdi = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jButtonValidOrdi = new javax.swing.JButton();
        jComboBoxOsOrdi = new javax.swing.JComboBox();
        jLabelFirmwareOrdi = new javax.swing.JLabel();
        jTextFieldFirmOrdi = new javax.swing.JTextField();
        jComboBoxEmplacement = new javax.swing.JComboBox();
        jComboBoxActive = new javax.swing.JComboBox();
        jPanelTablette = new javax.swing.JPanel();
        jLabelAddTab = new javax.swing.JLabel();
        jButtonValidTab = new javax.swing.JButton();
        jLabelNameTab = new javax.swing.JLabel();
        jLabelMacTab = new javax.swing.JLabel();
        jLabelEmplacementTab = new javax.swing.JLabel();
        jLabelOsTab = new javax.swing.JLabel();
        jLabelActiveTab = new javax.swing.JLabel();
        jTextFieldNameTab = new javax.swing.JTextField();
        jTextFieldMacTab = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxOsTab = new javax.swing.JComboBox();
        jComboBoxEmplacementTab = new javax.swing.JComboBox();
        jLabelFirmTab = new javax.swing.JLabel();
        jTextFieldFirmTab = new javax.swing.JTextField();
        jComboBoxActiveTab = new javax.swing.JComboBox();
        jPanelRouteur = new javax.swing.JPanel();
        jLabelAddRouteur = new javax.swing.JLabel();
        jLabelNameRouteur = new javax.swing.JLabel();
        jLabelMacRouteur = new javax.swing.JLabel();
        jLabelEmplacementRouteur = new javax.swing.JLabel();
        jLabelActiveRouteur = new javax.swing.JLabel();
        jTextFieldNameRouteur = new javax.swing.JTextField();
        jTextFieldMacRouteur = new javax.swing.JTextField();
        jButtonValidRouteur = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jComboBoxEmplacementRouteur = new javax.swing.JComboBox();
        jLabelFirmRouteur = new javax.swing.JLabel();
        jTextFieldFirmRouteur = new javax.swing.JTextField();
        jComboBoxActiveRouteur = new javax.swing.JComboBox();
        jPanelLocal = new javax.swing.JPanel();
        jLabelAddLocal = new javax.swing.JLabel();
        jLabelNameLocal = new javax.swing.JLabel();
        jTextFieldNameLocal = new javax.swing.JTextField();
        jButtonValidLocal = new javax.swing.JButton();
        jLabelAdresseLocal = new javax.swing.JLabel();
        jTextFieldAdresseLocal = new javax.swing.JTextField();
        jLabelNbSalleLocal = new javax.swing.JLabel();
        jSpinnerNbSalleLocal = new javax.swing.JSpinner();
        jPanelSalle = new javax.swing.JPanel();
        jLabelAddSalle = new javax.swing.JLabel();
        jLabelNameSalle = new javax.swing.JLabel();
        jLabelEmplacementSalle = new javax.swing.JLabel();
        jTextFieldNameSalle = new javax.swing.JTextField();
        jButtonValidSalle = new javax.swing.JButton();
        jComboBoxEmplacementSalle = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ajouter un équipement");

        jLabelAjouter.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabelAjouter.setText("Ajouter ");

        jComboBoxSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Local", "Salle", "Equipement", "     Ordinateur", "     Tablette", "     Routeur" }));
        jComboBoxSelection.setToolTipText("Sélectionner...");
        jComboBoxSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSelectionActionPerformed(evt);
            }
        });

        jButtonValidSelect.setText("Valider");
        jButtonValidSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidSelectActionPerformed(evt);
            }
        });

        jLabelSelect.setText("Sélectionner ce que vous voulez ajouter...");

        jPanelPrincipal.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 566, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 401, Short.MAX_VALUE)
        );

        jPanelPrincipal.add(jPanel2, "card5");

        jPanelOrdi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelAddOrdi.setText("Ajouter un Ordinateur");

        jLabelNameOrdi.setText("Nom de l'ordinateur :");

        jLabelMacOrdi.setText("Adresse MAC :");

        jLabelEmplacementOrdi.setText("Emplacement :");

        jLabelOsOrdi.setText("Système d'exploitation :");

        jLabelActiveOrdi.setText("Activer / Désactiver :");

        jButtonValidOrdi.setText("Valider");
        jButtonValidOrdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidOrdiActionPerformed(evt);
            }
        });

        jComboBoxOsOrdi.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Windows 7", "Windows 8", "Linux", "Mac" }));

        jLabelFirmwareOrdi.setText("Nom du firmware :");

        jComboBoxEmplacement.setModel(getComboBoxModelSalle());

        jComboBoxActive.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "true", "false" }));

        javax.swing.GroupLayout jPanelOrdiLayout = new javax.swing.GroupLayout(jPanelOrdi);
        jPanelOrdi.setLayout(jPanelOrdiLayout);
        jPanelOrdiLayout.setHorizontalGroup(
            jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(jLabelAddOrdi)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrdiLayout.createSequentialGroup()
                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOrdiLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonValidOrdi))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelOrdiLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelOrdiLayout.createSequentialGroup()
                                    .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelMacOrdi)
                                        .addComponent(jLabelNameOrdi))
                                    .addGap(122, 122, 122))
                                .addComponent(jLabelEmplacementOrdi))
                            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFirmwareOrdi)
                                    .addComponent(jLabelOsOrdi)
                                    .addComponent(jLabelActiveOrdi))
                                .addGap(107, 107, 107)))
                        .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jComboBoxOsOrdi, javax.swing.GroupLayout.Alignment.LEADING, 0, 100, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNameOrdi, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldMacOrdi, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxEmplacement, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(79, 79, 79)
                                .addComponent(jLabel13))
                            .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jComboBoxActive, javax.swing.GroupLayout.Alignment.LEADING, 0, 100, Short.MAX_VALUE)
                                .addComponent(jTextFieldFirmOrdi, javax.swing.GroupLayout.Alignment.LEADING)))))
                .addGap(41, 41, 41))
        );
        jPanelOrdiLayout.setVerticalGroup(
            jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOrdiLayout.createSequentialGroup()
                        .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelNameOrdi)
                                    .addComponent(jTextFieldNameOrdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelMacOrdi)
                                    .addComponent(jTextFieldMacOrdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelEmplacementOrdi)
                                    .addComponent(jComboBoxEmplacement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanelOrdiLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelAddOrdi)
                                .addGap(106, 106, 106)
                                .addComponent(jLabel13)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelOsOrdi)
                            .addComponent(jComboBoxOsOrdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelOrdiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFirmwareOrdi, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextFieldFirmOrdi, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(jLabelActiveOrdi))
                    .addGroup(jPanelOrdiLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jComboBoxActive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91)
                .addComponent(jButtonValidOrdi)
                .addGap(24, 24, 24))
        );

        jPanelPrincipal.add(jPanelOrdi, "ordi");

        jPanelTablette.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelAddTab.setText("Ajouter une tablette");

        jButtonValidTab.setText("Valider");
        jButtonValidTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidTabActionPerformed(evt);
            }
        });

        jLabelNameTab.setText("Nom de la tablette :");

        jLabelMacTab.setText("Adresse MAC :");

        jLabelEmplacementTab.setText("Emplacement :");

        jLabelOsTab.setText("Système d'exploitation :");

        jLabelActiveTab.setText("Activer / Désactiver :");

        jComboBoxOsTab.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Android", "iOS", "Windows" }));

        jComboBoxEmplacementTab.setModel(getComboBoxModelSalle());

        jLabelFirmTab.setText("Nom du firmware :");

        jComboBoxActiveTab.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "true", "false" }));

        javax.swing.GroupLayout jPanelTabletteLayout = new javax.swing.GroupLayout(jPanelTablette);
        jPanelTablette.setLayout(jPanelTabletteLayout);
        jPanelTabletteLayout.setHorizontalGroup(
            jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabletteLayout.createSequentialGroup()
                .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTabletteLayout.createSequentialGroup()
                        .addGap(193, 193, 193)
                        .addComponent(jLabelAddTab))
                    .addGroup(jPanelTabletteLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelActiveTab)
                            .addComponent(jLabelOsTab)
                            .addComponent(jLabelFirmTab)
                            .addComponent(jLabelEmplacementTab)
                            .addComponent(jLabelNameTab)
                            .addComponent(jLabelMacTab))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 121, Short.MAX_VALUE)
                        .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelTabletteLayout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jComboBoxEmplacementTab, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jTextFieldMacTab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextFieldNameTab, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanelTabletteLayout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jTextFieldFirmTab, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBoxOsTab, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jComboBoxActiveTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134)
                        .addComponent(jLabel18)))
                .addContainerGap(34, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTabletteLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonValidTab)
                .addGap(92, 92, 92))
        );
        jPanelTabletteLayout.setVerticalGroup(
            jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTabletteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAddTab)
                .addGap(64, 64, 64)
                .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTabletteLayout.createSequentialGroup()
                        .addGroup(jPanelTabletteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanelTabletteLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabelNameTab)
                                .addGap(11, 11, 11)
                                .addComponent(jLabelMacTab, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelEmplacementTab)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabelOsTab)
                        .addGap(20, 20, 20)
                        .addComponent(jLabelFirmTab)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelActiveTab)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jButtonValidTab)
                        .addGap(76, 76, 76))
                    .addGroup(jPanelTabletteLayout.createSequentialGroup()
                        .addComponent(jTextFieldNameTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMacTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jComboBoxEmplacementTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxOsTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jTextFieldFirmTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxActiveTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanelPrincipal.add(jPanelTablette, "tablette");

        jPanelRouteur.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelAddRouteur.setText("Ajouter un routeur");

        jLabelNameRouteur.setText("Nom du routeur :");

        jLabelMacRouteur.setText("Adresse MAC :");

        jLabelEmplacementRouteur.setText("Emplacement :");

        jLabelActiveRouteur.setText("Activer / Désactiver :");

        jButtonValidRouteur.setText("Valider");
        jButtonValidRouteur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidRouteurActionPerformed(evt);
            }
        });

        jComboBoxEmplacementRouteur.setModel(getComboBoxModelSalle());

        jLabelFirmRouteur.setText("Nom du firmware :");

        jComboBoxActiveRouteur.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "true", "false" }));

        javax.swing.GroupLayout jPanelRouteurLayout = new javax.swing.GroupLayout(jPanelRouteur);
        jPanelRouteur.setLayout(jPanelRouteurLayout);
        jPanelRouteurLayout.setHorizontalGroup(
            jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRouteurLayout.createSequentialGroup()
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelRouteurLayout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jLabelAddRouteur))
                    .addGroup(jPanelRouteurLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelFirmRouteur)
                            .addGroup(jPanelRouteurLayout.createSequentialGroup()
                                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelNameRouteur)
                                    .addComponent(jLabelMacRouteur)
                                    .addComponent(jLabelEmplacementRouteur)
                                    .addComponent(jLabelActiveRouteur))
                                .addGap(93, 93, 93)
                                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldFirmRouteur)
                                    .addComponent(jComboBoxEmplacementRouteur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldNameRouteur)
                                    .addComponent(jTextFieldMacRouteur, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                    .addComponent(jComboBoxActiveRouteur, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRouteurLayout.createSequentialGroup()
                .addGap(256, 450, Short.MAX_VALUE)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRouteurLayout.createSequentialGroup()
                        .addComponent(jButtonValidRouteur)
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelRouteurLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addGap(38, 38, 38))))
        );
        jPanelRouteurLayout.setVerticalGroup(
            jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelRouteurLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAddRouteur)
                .addGap(75, 75, 75)
                .addComponent(jLabel24)
                .addGap(17, 17, 17)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameRouteur)
                    .addComponent(jTextFieldNameRouteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMacRouteur)
                    .addComponent(jTextFieldMacRouteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmplacementRouteur)
                    .addComponent(jComboBoxEmplacementRouteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelFirmRouteur)
                    .addComponent(jTextFieldFirmRouteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelRouteurLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelActiveRouteur)
                    .addComponent(jComboBoxActiveRouteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87)
                .addComponent(jButtonValidRouteur)
                .addGap(38, 38, 38))
        );

        jPanelPrincipal.add(jPanelRouteur, "routeur");

        jPanelLocal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelAddLocal.setText("Ajouter un local");

        jLabelNameLocal.setText("Nom du local :");

        jButtonValidLocal.setText("Valider");
        jButtonValidLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidLocalActionPerformed(evt);
            }
        });

        jLabelAdresseLocal.setText("Adresse du local :");

        jLabelNbSalleLocal.setText("Nombre de salle(s) :");

        javax.swing.GroupLayout jPanelLocalLayout = new javax.swing.GroupLayout(jPanelLocal);
        jPanelLocal.setLayout(jPanelLocalLayout);
        jPanelLocalLayout.setHorizontalGroup(
            jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocalLayout.createSequentialGroup()
                .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLocalLayout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(jLabelAddLocal))
                    .addGroup(jPanelLocalLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNameLocal)
                            .addComponent(jLabelAdresseLocal)
                            .addComponent(jLabelNbSalleLocal))
                        .addGap(177, 177, 177)
                        .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNameLocal, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jTextFieldAdresseLocal)
                            .addGroup(jPanelLocalLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jSpinnerNbSalleLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(132, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelLocalLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonValidLocal)
                .addGap(91, 91, 91))
        );
        jPanelLocalLayout.setVerticalGroup(
            jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAddLocal)
                .addGap(55, 55, 55)
                .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameLocal)
                    .addComponent(jTextFieldNameLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAdresseLocal)
                    .addComponent(jTextFieldAdresseLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLocalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNbSalleLocal)
                    .addComponent(jSpinnerNbSalleLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(jButtonValidLocal)
                .addGap(81, 81, 81))
        );

        jPanelPrincipal.add(jPanelLocal, "local");

        jPanelSalle.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabelAddSalle.setText("Ajouter une salle");

        jLabelNameSalle.setText("Nom de la salle :");

        jLabelEmplacementSalle.setText("Emplacement :");

        jTextFieldNameSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameSalleActionPerformed(evt);
            }
        });

        jButtonValidSalle.setText("Valider");
        jButtonValidSalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidSalleActionPerformed(evt);
            }
        });

        jComboBoxEmplacementSalle.setModel(getComboBoxModelLocal());

        javax.swing.GroupLayout jPanelSalleLayout = new javax.swing.GroupLayout(jPanelSalle);
        jPanelSalle.setLayout(jPanelSalleLayout);
        jPanelSalleLayout.setHorizontalGroup(
            jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSalleLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButtonValidSalle)
                .addGap(73, 73, 73))
            .addGroup(jPanelSalleLayout.createSequentialGroup()
                .addGroup(jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSalleLayout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jLabelAddSalle))
                    .addGroup(jPanelSalleLayout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addGroup(jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNameSalle)
                            .addComponent(jLabelEmplacementSalle))
                        .addGap(128, 128, 128)
                        .addGroup(jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextFieldNameSalle)
                            .addComponent(jComboBoxEmplacementSalle, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(143, Short.MAX_VALUE))
        );
        jPanelSalleLayout.setVerticalGroup(
            jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSalleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAddSalle)
                .addGap(86, 86, 86)
                .addGroup(jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNameSalle)
                    .addComponent(jTextFieldNameSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelSalleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelEmplacementSalle)
                    .addComponent(jComboBoxEmplacementSalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(jButtonValidSalle)
                .addGap(65, 65, 65))
        );

        jPanelPrincipal.add(jPanelSalle, "salle");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(jComboBoxSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(jButtonValidSelect))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(jLabelSelect))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(jLabelAjouter)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabelAjouter)
                .addGap(31, 31, 31)
                .addComponent(jLabelSelect)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonValidSelect))
                .addGap(18, 18, 18)
                .addComponent(jPanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jComboBoxSelection.getAccessibleContext().setAccessibleName("Sélectionner");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxSelectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSelectionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxSelectionActionPerformed

    
    /** Fonction d'affichage dans le ComboBox principal pour choisir ce que l'on veut ajouter
     * Prmet de choisir d'ajouter un local, salle ou équipement
     * AFfichage du cardLayout approprier
     * 
     * @author Florian
     * @param evt 
     */
    private void jButtonValidSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidSelectActionPerformed
        // TODO add your handling code here:
        String valueBox = "";
        valueBox = (String)jComboBoxSelection.getSelectedItem();
        if("     Ordinateur".equals(valueBox)){
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal,"ordi");
        }
        else if("     Tablette".equals(valueBox)){
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal,"tablette");
        }
        else if("     Routeur".equals(valueBox)){
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal, "routeur");
        }
        else if("Local".equals(valueBox)){
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal, "local");
        }
        else if("Salle".equals(valueBox)){
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal, "salle");
        }
        else{
            ((CardLayout)jPanelPrincipal.getLayout()).show(jPanelPrincipal, "card5");
        }
        
    }//GEN-LAST:event_jButtonValidSelectActionPerformed

    private void jButtonValidTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidTabActionPerformed
        // TODO add your handling code here:
        this.ajouterAppareil();
    }//GEN-LAST:event_jButtonValidTabActionPerformed

    private void jButtonValidLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidLocalActionPerformed
        // TODO add your handling code here:

        if(this.verifEntreeLocal()){
            BDD bd = new BDD();
            bd.connect(); 
            String nomLoc = jTextFieldNameLocal.getText();
            String addrLocal = jTextFieldAdresseLocal.getText();
            int nbSLocal = (Integer)jSpinnerNbSalleLocal.getValue(); 
            try {
                if(bd.exist("Local", "nomLocal", nomLoc)){
                    javax.swing.JOptionPane.showMessageDialog(null,"Le nom du local est déjà présent dans la base", "Erreur Saisie nom local", JOptionPane.ERROR_MESSAGE); 
                    jTextFieldNameLocal.requestFocus(); 
                }
                else{
                    String req = "INSERT INTO Local (nomlocal, lieulocal, nbrsalle) VALUES ('" +nomLoc +"', '" +addrLocal+"', " +nbSLocal+");";
                    bd.request(req);
                    javax.swing.JOptionPane.showMessageDialog(null,"Le local " +nomLoc+ " a bien été ajouté dans la base !", "Succès", JOptionPane.PLAIN_MESSAGE); 
                    Principal princ = new Principal();
                    princ.setLocationRelativeTo(null);
                    this.setVisible(false);
                    princ.setVisible(true);

                }
            } catch (SQLException ex) {
                Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else{
            System.out.println("Problème insertion local");
        }

    }//GEN-LAST:event_jButtonValidLocalActionPerformed

    private void jTextFieldNameSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameSalleActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextFieldNameSalleActionPerformed

    private void jButtonValidSalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidSalleActionPerformed
        if(this.verifEntreeSalle()){
            try {
                BDD bd = new BDD();
                bd.connect();
                String nomS = jTextFieldNameSalle.getText();
                String valueBox = (String)jComboBoxEmplacementSalle.getSelectedItem();
                if(bd.exist("Salle", "nomSalle", nomS)){
                    javax.swing.JOptionPane.showMessageDialog(null,"Le nom de la salle est déjà présent dans la base", "Erreur Saisie nom salle", JOptionPane.ERROR_MESSAGE); 
                    jTextFieldNameSalle.requestFocus();                     
                }
                else{
                    String req = "INSERT INTO Salle (nomSalle, lieuSalle, nomLocal) VALUES ('" +nomS + "', '" +valueBox+"', '" +valueBox +"');";
                    bd.request(req);
                    javax.swing.JOptionPane.showMessageDialog(null,"La salle " +nomS+ " dans le local " +valueBox +" a bien été ajouté dans la base !", "Succès", JOptionPane.PLAIN_MESSAGE); 
                    Principal princ = new Principal();
                    princ.setLocationRelativeTo(null);
                    this.setVisible(false);
                    princ.setVisible(true);                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButtonValidSalleActionPerformed

    private void jButtonValidOrdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidOrdiActionPerformed
        // TODO add your handling code here:
        this.ajouterAppareil();
    }//GEN-LAST:event_jButtonValidOrdiActionPerformed

    private void jButtonValidRouteurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidRouteurActionPerformed
        // TODO add your handling code here:
        this.ajouterAppareil();
    }//GEN-LAST:event_jButtonValidRouteurActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ajouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ajouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ajouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ajouter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ajouter().setVisible(true);
            }
        });
    }
    
    
    /** Vérifie si les entrées pour le local sont bonnes
     * 
     * @return booléan
     *  @author Florian
     */
    private boolean verifEntreeLocal(){
        String nomLoc = jTextFieldNameLocal.getText();
        String addrLocal = jTextFieldAdresseLocal.getText();
        int nbSLocal = (Integer)jSpinnerNbSalleLocal.getValue();        
        if(nomLoc.length() > 32){
             javax.swing.JOptionPane.showMessageDialog(null,"Le nom du local est trop grand", "Erreur Saisie nom local", JOptionPane.ERROR_MESSAGE); 
             jTextFieldNameLocal.requestFocus(); 
             return false;
        }
        if(addrLocal.length() > 32){
             javax.swing.JOptionPane.showMessageDialog(null,"L'adresse du local est trop grande", "Erreur Saisie adresse local", JOptionPane.ERROR_MESSAGE); 
             jTextFieldAdresseLocal.requestFocus(); 
             return false;
        }
        if(nbSLocal < 1){
             javax.swing.JOptionPane.showMessageDialog(null,"Le nombre de Salle est incorrect", "Erreur Saisie nombre salle ", JOptionPane.ERROR_MESSAGE); 
             jSpinnerNbSalleLocal.requestFocus();            
             return false;
        }
        return true;
        
    }
    
    
    /** Vérifie si les entrées pour l'ajout d'une salle sont comformes
     * 
     * 
     * @author Florian
     * @return booléan 
     */
    private boolean verifEntreeSalle(){
        String nomSalle = jTextFieldNameSalle.getText();
        if(nomSalle.length() > 32){
             javax.swing.JOptionPane.showMessageDialog(null,"Le nom de la salle est trop grand", "Erreur Saisie nom salle", JOptionPane.ERROR_MESSAGE); 
             jTextFieldNameSalle.requestFocus(); 
             return false;
        }
        return true;
    }
    
    
    /**
     * Vérifie si l'adress MAC est correcte
     * 
     * @author Florian
     * @return booléan
     */
    private boolean verifAddrMAC(String addr){
        if(addr.length() != 17){
            return false;
        }
        addr = addr.toLowerCase();
        int i = 0;
        int val;
        while(i < addr.length()){
            val = (int)addr.charAt(i);
            if((val >= 97 && val <= 102) || (val >= 48 && val <= 57) || val == 58 ){
                i++;
            }
            else
            {
                return false;
            }
        }
        return true;
        
    }
        /** Vérifie si les entrées pour l'ajout d'un ordi sont comformes
         *  
         * @author Florian
         * @return booléan
         */
    
    private boolean verifEntreeOrdi(){
        String nomO = jTextFieldNameOrdi.getText();
        String addrM = jTextFieldMacOrdi.getText();
        String nomFirm = jTextFieldFirmOrdi.getText();
        if(this.verifAddrMAC(addrM)){
            if(nomO.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom de l'ordinateur est trop grand", "Erreur Saisie nom ordi", JOptionPane.ERROR_MESSAGE); 
                jTextFieldNameOrdi.requestFocus(); 
                return false; 
            }
            if(nomFirm.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom du firmware est trop grand", "Erreur Saisie nom firmware", JOptionPane.ERROR_MESSAGE); 
                jTextFieldFirmOrdi.requestFocus(); 
                return false;
            }
        }else{
             javax.swing.JOptionPane.showMessageDialog(null,"L'adresse MAC entrée n'est pas correcte", "Erreur Saisie adresse MAC", JOptionPane.ERROR_MESSAGE); 
             jTextFieldMacOrdi.requestFocus(); 
             return false;            
        }
        
        return true;
       
    }
        /** Vérifie si les entrées pour l'ajout d'une tablette sont comformes
         * @author Florian
         * @return booléan 
         */

    private boolean verifEntreeTablette(){
        String nomT = jTextFieldNameTab.getText();
        String addrM = jTextFieldMacTab.getText();
        String nomFirm = jTextFieldFirmTab.getText();
        if(this.verifAddrMAC(addrM)){
            if(nomT.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom de la tablette est trop grand", "Erreur Saisie nom tablette", JOptionPane.ERROR_MESSAGE); 
                jTextFieldNameOrdi.requestFocus(); 
                return false; 
            }
            if(nomFirm.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom du firmware est trop grand", "Erreur Saisie nom firmware", JOptionPane.ERROR_MESSAGE); 
                jTextFieldFirmOrdi.requestFocus(); 
                return false;
            }
        }else{
             javax.swing.JOptionPane.showMessageDialog(null,"L'adresse MAC entrée n'est pas correcte", "Erreur Saisie adresse MAC", JOptionPane.ERROR_MESSAGE); 
             jTextFieldMacOrdi.requestFocus(); 
             return false;            
        }
        
        return true;
 }
    
    
        /** Vérifie si les entrées pour l'ajout d'un routeur sont comformes
         * 
         * @author Florian
         * @return booléan
         */

    private boolean verifEntreeRouteur(){
         String nomR = jTextFieldNameRouteur.getText();
        String addrM = jTextFieldMacRouteur.getText();
        String nomFirm = jTextFieldFirmRouteur.getText();
        if(this.verifAddrMAC(addrM)){
            if(nomR.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom du routeur est trop grand", "Erreur Saisie nom routeur", JOptionPane.ERROR_MESSAGE); 
                jTextFieldNameOrdi.requestFocus(); 
                return false; 
            }
            if(nomFirm.length() > 32)
            {
                javax.swing.JOptionPane.showMessageDialog(null,"Le nom du firmware est trop grand", "Erreur Saisie nom firmware", JOptionPane.ERROR_MESSAGE); 
                jTextFieldFirmOrdi.requestFocus(); 
                return false;
            }
        }else{
             javax.swing.JOptionPane.showMessageDialog(null,"L'adresse MAC entrée n'est pas correcte", "Erreur Saisie adresse MAC", JOptionPane.ERROR_MESSAGE); 
             jTextFieldMacOrdi.requestFocus(); 
             return false;            
        }
        
        return true;       
    }
    
    /**
     * Ajoute un ordi dans la BDD
     * @author Florian
     * 
     */
    private void ajouterOrdi(){
        if(this.verifEntreeOrdi()){
            try {
                BDD bd = new BDD();
                bd.connect();
                String nomO = jTextFieldNameOrdi.getText();
                String valueBoxOS = (String)jComboBoxOsOrdi.getSelectedItem();
                String valueBoxEmp = (String)jComboBoxEmplacement.getSelectedItem();
                valueBoxEmp = valueBoxEmp.substring(5);
                String nomFirm = jTextFieldFirmOrdi.getText();
                String valueActive = (String)jComboBoxActive.getSelectedItem();
                String typeApp = (String)jComboBoxSelection.getSelectedItem();
                String adrMac = jTextFieldMacOrdi.getText();
                if(bd.exist("Appareil", "nomapp", nomO)){
                    javax.swing.JOptionPane.showMessageDialog(null,"Le nom de l'ordinateur est déjà présent dans la base", "Erreur Saisie nom ordi", JOptionPane.ERROR_MESSAGE); 
                    jTextFieldNameOrdi.requestFocus();                     
                }
                else{
                    String req = "INSERT INTO Appareil (nomapp, typeappareil, systexpappareil, nomfirmware, active, lieuappareil, nomsalle) VALUES ('" +nomO + "', '" +typeApp+"', '" +valueBoxOS +"', '" +nomFirm+"', " +valueActive+", '" +valueBoxEmp+"', '" +valueBoxEmp+"');";
                    bd.request(req);
                    req = "INSERT INTO carte_reseau (adrmacappareil, nomapp) VALUES ('" +adrMac +"', '" +nomO+"');";
                    bd.request(req);
                    javax.swing.JOptionPane.showMessageDialog(null,"L'appareil " +nomO +" a bien été ajouté dans la base !", "Succès", JOptionPane.PLAIN_MESSAGE); 
                    Principal princ = new Principal();
                    princ.setLocationRelativeTo(null);
                    this.setVisible(false);
                    princ.setVisible(true);                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }
        }              
    }
    
    /**
     * Ajoute une tablette dans la BDD
     * 
     * @author Florian
     */
    private void ajouterTablette(){
         if(this.verifEntreeTablette()){
            try {
                BDD bd = new BDD();
                bd.connect();
                String nomT = jTextFieldNameTab.getText();
                String valueBoxOS = (String)jComboBoxOsTab.getSelectedItem();
                String valueBoxEmp = (String)jComboBoxEmplacementTab.getSelectedItem();
                valueBoxEmp = valueBoxEmp.substring(5);
                String nomFirm = jTextFieldFirmTab.getText();
                String valueActive = (String)jComboBoxActiveTab.getSelectedItem();
                String typeApp = (String)jComboBoxSelection.getSelectedItem();
                String adrMac = jTextFieldMacTab.getText();
                if(bd.exist("Appareil", "nomapp", nomT)){
                    javax.swing.JOptionPane.showMessageDialog(null,"Le nom de la tablette est déjà présent dans la base", "Erreur Saisie nom tablette", JOptionPane.ERROR_MESSAGE); 
                    jTextFieldNameOrdi.requestFocus();                     
                }
                else{
                    String req = "INSERT INTO Appareil (nomapp, typeappareil, systexpappareil, nomfirmware, active, lieuappareil, nomsalle) VALUES ('" +nomT + "', '" +typeApp+"', '" +valueBoxOS +"', '" +nomFirm+"', " +valueActive+", '" +valueBoxEmp+"', '" +valueBoxEmp+"');";
                    bd.request(req);
                    req = "INSERT INTO carte_reseau (adrmacappareil, nomapp) VALUES ('" +adrMac +"', '" +nomT+"');";
                    bd.request(req);
                    javax.swing.JOptionPane.showMessageDialog(null,"L'appareil " +nomT +" a bien été ajouté dans la base !", "Succès", JOptionPane.PLAIN_MESSAGE); 
                    Principal princ = new Principal();
                    princ.setLocationRelativeTo(null);
                    this.setVisible(false);
                    princ.setVisible(true);                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }
    
    
    /**
     * Ajoute un routeur dans la BDD
     * @author Florian
     */
    private void ajouterRouteur(){
          if(this.verifEntreeRouteur()){
            try {
                BDD bd = new BDD();
                bd.connect();
                String nomR = jTextFieldNameRouteur.getText();
                String valueBoxOS = " ";
                String valueBoxEmp = (String)jComboBoxEmplacementRouteur.getSelectedItem();
                valueBoxEmp = valueBoxEmp.substring(5);
                String nomFirm = jTextFieldFirmRouteur.getText();
                String valueActive = (String)jComboBoxActiveRouteur.getSelectedItem();
                String typeApp = (String)jComboBoxSelection.getSelectedItem();
                String adrMac = jTextFieldMacRouteur.getText();
                if(bd.exist("Appareil", "nomapp", nomR)){
                    javax.swing.JOptionPane.showMessageDialog(null,"Le nom du routeur est déjà présent dans la base", "Erreur Saisie nom routeur", JOptionPane.ERROR_MESSAGE); 
                    jTextFieldNameOrdi.requestFocus();                     
                }
                else{
                    String req = "INSERT INTO Appareil (nomapp, typeappareil, systexpappareil, nomfirmware, active, lieuappareil, nomsalle) VALUES ('" +nomR + "', '" +typeApp+"', '" +valueBoxOS +"', '" +nomFirm+"', " +valueActive+", '" +valueBoxEmp+"', '" +valueBoxEmp+"');";
                    bd.request(req);
                    req = "INSERT INTO carte_reseau (adrmacappareil, nomapp) VALUES ('" +adrMac +"', '" +nomR+"');";
                    bd.request(req);
                    javax.swing.JOptionPane.showMessageDialog(null,"L'appareil " +nomR +" a bien été ajouté dans la base !", "Succès", JOptionPane.PLAIN_MESSAGE); 
                    Principal princ = new Principal();
                    princ.setLocationRelativeTo(null);
                    this.setVisible(false);
                    princ.setVisible(true);                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
    }
    
    /**
     * Aujoute un appareil dans la BDD. Appelle les méthodes ajouterOrdi , tablette ou routeur en fonction du comboBox
     * @author FLorian
     */
    private void ajouterAppareil(){
        String type = (String)jComboBoxSelection.getSelectedItem();
        if("     Ordinateur".equals(type)){
            this.ajouterOrdi();
        }
        else if("     Tablette".equals(type)){
            this.ajouterTablette();
        }
        else if ("     Routeur".equals(type)){
            this.ajouterRouteur();
        }
    
        
        
    }
    
    
    
    
    /** Construit dynamiquement le comboBox pour l'entrée d'une salle
     * 
     * @author Florian
     * @return ComboBoxModel 
     */
    private ComboBoxModel getComboBoxModelLocal() {
    
        try {
            // TODO add your handling code here:
            BDD bd = new BDD();
            bd.connect();
            bd.select("SELECT nomLocal FROM Local");
            String[] locaux = new String[100];
            int i = 0;
            while(bd.getResults().next())
            {
                locaux[i] = bd.getResults().getString(1);
                i++;
            }
            String[] item = new String[i];
            int cpt = i;
            
            for(i = 0; i<cpt; i++){
                item[i] = locaux[i];
            }
            
            return new DefaultComboBoxModel(item);
        } catch (SQLException ex) {
            Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
        }
        return new DefaultComboBoxModel();

    }
    
    
    /** Construit dynamiquement le comboBox pour l'ajou d'un appareil.
     * 
     * @author Florian
     * @return ComboBoxModel
     */
    private ComboBoxModel getComboBoxModelSalle(){
         try {
            // TODO add your handling code here:
            BDD bd = new BDD();
            bd.connect();
            bd.select("SELECT nomLocal FROM Local");
            ResultSet resultatsL = bd.getResults();
            String[] locaux = new String[100];
            String[] Salle = new String[100];
            int cptl = 0;
            int cptS = 0;
            String req;
            while(resultatsL.next())
            {
                locaux[cptl] = resultatsL.getString(1);
                req = "SELECT nomSalle FROM Salle WHERE lieuSalle = '" +locaux[cptl]+"';";
                bd.select(req);
                Salle[cptS] = locaux[cptl];
                cptS++;
                while(bd.getResults().next()){
                    Salle[cptS] = "     ".concat(bd.getResults().getString(1));
                    cptS++;
                }
                cptl++;
            }

            
            String[] item = new String[cptS]; 
            

            
            
            for(int i = 0; i<cptS; i++){
                item[i] = Salle[i];
                System.out.println(item[i]);
            }
            
            return new DefaultComboBoxModel(item);
        } catch (SQLException ex) {
            Logger.getLogger(Ajouter.class.getName()).log(Level.SEVERE, null, ex);
        }
        return new DefaultComboBoxModel();

}       
           
        



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonValidLocal;
    private javax.swing.JButton jButtonValidOrdi;
    private javax.swing.JButton jButtonValidRouteur;
    private javax.swing.JButton jButtonValidSalle;
    private javax.swing.JButton jButtonValidSelect;
    private javax.swing.JButton jButtonValidTab;
    private javax.swing.JComboBox jComboBoxActive;
    private javax.swing.JComboBox jComboBoxActiveRouteur;
    private javax.swing.JComboBox jComboBoxActiveTab;
    private javax.swing.JComboBox jComboBoxEmplacement;
    private javax.swing.JComboBox jComboBoxEmplacementRouteur;
    private javax.swing.JComboBox jComboBoxEmplacementSalle;
    private javax.swing.JComboBox jComboBoxEmplacementTab;
    private javax.swing.JComboBox jComboBoxOsOrdi;
    private javax.swing.JComboBox jComboBoxOsTab;
    private javax.swing.JComboBox jComboBoxSelection;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabelActiveOrdi;
    private javax.swing.JLabel jLabelActiveRouteur;
    private javax.swing.JLabel jLabelActiveTab;
    private javax.swing.JLabel jLabelAddLocal;
    private javax.swing.JLabel jLabelAddOrdi;
    private javax.swing.JLabel jLabelAddRouteur;
    private javax.swing.JLabel jLabelAddSalle;
    private javax.swing.JLabel jLabelAddTab;
    private javax.swing.JLabel jLabelAdresseLocal;
    private javax.swing.JLabel jLabelAjouter;
    private javax.swing.JLabel jLabelEmplacementOrdi;
    private javax.swing.JLabel jLabelEmplacementRouteur;
    private javax.swing.JLabel jLabelEmplacementSalle;
    private javax.swing.JLabel jLabelEmplacementTab;
    private javax.swing.JLabel jLabelFirmRouteur;
    private javax.swing.JLabel jLabelFirmTab;
    private javax.swing.JLabel jLabelFirmwareOrdi;
    private javax.swing.JLabel jLabelMacOrdi;
    private javax.swing.JLabel jLabelMacRouteur;
    private javax.swing.JLabel jLabelMacTab;
    private javax.swing.JLabel jLabelNameLocal;
    private javax.swing.JLabel jLabelNameOrdi;
    private javax.swing.JLabel jLabelNameRouteur;
    private javax.swing.JLabel jLabelNameSalle;
    private javax.swing.JLabel jLabelNameTab;
    private javax.swing.JLabel jLabelNbSalleLocal;
    private javax.swing.JLabel jLabelOsOrdi;
    private javax.swing.JLabel jLabelOsTab;
    private javax.swing.JLabel jLabelSelect;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelLocal;
    private javax.swing.JPanel jPanelOrdi;
    private javax.swing.JPanel jPanelPrincipal;
    private javax.swing.JPanel jPanelRouteur;
    private javax.swing.JPanel jPanelSalle;
    private javax.swing.JPanel jPanelTablette;
    private javax.swing.JSpinner jSpinnerNbSalleLocal;
    private javax.swing.JTextField jTextFieldAdresseLocal;
    private javax.swing.JTextField jTextFieldFirmOrdi;
    private javax.swing.JTextField jTextFieldFirmRouteur;
    private javax.swing.JTextField jTextFieldFirmTab;
    private javax.swing.JTextField jTextFieldMacOrdi;
    private javax.swing.JTextField jTextFieldMacRouteur;
    private javax.swing.JTextField jTextFieldMacTab;
    private javax.swing.JTextField jTextFieldNameLocal;
    private javax.swing.JTextField jTextFieldNameOrdi;
    private javax.swing.JTextField jTextFieldNameRouteur;
    private javax.swing.JTextField jTextFieldNameSalle;
    private javax.swing.JTextField jTextFieldNameTab;
    // End of variables declaration//GEN-END:variables
}
